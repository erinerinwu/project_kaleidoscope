{"ast":null,"code":"var _jsxFileName = \"/Users/erinwu/kaleidoscope/src/Components/Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = ({\n  size = 500\n}) => {\n  _s();\n  // Making the canvas square\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.style.backgroundColor = 'pink'; // Set the canvas background to pink\n    const context = canvas.getContext('2d');\n    const centerX = canvas.width / 2;\n    const centerY = canvas.height / 2;\n    let drawing = false;\n    const startDrawing = e => {\n      drawing = true;\n      draw(e);\n    };\n    const draw = e => {\n      if (!drawing) return;\n      const rect = canvas.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const y = e.clientY - rect.top;\n      const angle = Math.atan2(y - centerY, x - centerX);\n      const dist = Math.sqrt((x - centerX) ** 2 + (y - centerY) ** 2);\n      context.lineWidth = 5;\n      context.lineCap = 'round';\n\n      // Draw in all 8 sections\n      for (let i = 0; i < 8; i++) {\n        const reflectedAngle = angle + Math.PI / 4 * i;\n        const newX = centerX + dist * Math.cos(reflectedAngle);\n        const newY = centerY + dist * Math.sin(reflectedAngle);\n        if (i > 0) {\n          // Avoid repeating the moveTo for the first section\n          context.moveTo(newX, newY);\n        }\n        context.lineTo(newX, newY);\n        context.stroke();\n        context.beginPath();\n        context.moveTo(newX, newY);\n      }\n    };\n    const stopDrawing = () => {\n      drawing = false;\n      context.beginPath(); // Reset the path so the next start doesn't connect to the previous end\n    };\n    canvas.addEventListener('mousedown', startDrawing);\n    canvas.addEventListener('mousemove', draw);\n    canvas.addEventListener('mouseup', stopDrawing);\n    canvas.addEventListener('mouseout', stopDrawing);\n    return () => {\n      canvas.removeEventListener('mousedown', startDrawing);\n      canvas.removeEventListener('mousemove', draw);\n      canvas.removeEventListener('mouseup', stopDrawing);\n      canvas.removeEventListener('mouseout', stopDrawing);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: size,\n    height: size\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 10\n  }, this); // Adjusting for square size\n};\n_s(Canvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","Canvas","size","_s","canvasRef","canvas","current","style","backgroundColor","context","getContext","centerX","width","centerY","height","drawing","startDrawing","e","draw","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","angle","Math","atan2","dist","sqrt","lineWidth","lineCap","i","reflectedAngle","PI","newX","cos","newY","sin","moveTo","lineTo","stroke","beginPath","stopDrawing","addEventListener","removeEventListener","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/erinwu/kaleidoscope/src/Components/Canvas.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nconst Canvas = ({ size = 500 }) => { // Making the canvas square\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.style.backgroundColor = 'pink'; // Set the canvas background to pink\n    const context = canvas.getContext('2d');\n    const centerX = canvas.width / 2;\n    const centerY = canvas.height / 2;\n    let drawing = false;\n\n    const startDrawing = (e) => {\n      drawing = true;\n      draw(e);\n    };\n\n    const draw = (e) => {\n      if (!drawing) return;\n      const rect = canvas.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const y = e.clientY - rect.top;\n      const angle = Math.atan2(y - centerY, x - centerX);\n      const dist = Math.sqrt((x - centerX) ** 2 + (y - centerY) ** 2);\n\n      context.lineWidth = 5;\n      context.lineCap = 'round';\n\n      // Draw in all 8 sections\n      for (let i = 0; i < 8; i++) {\n        const reflectedAngle = angle + (Math.PI / 4) * i;\n        const newX = centerX + dist * Math.cos(reflectedAngle);\n        const newY = centerY + dist * Math.sin(reflectedAngle);\n\n        if (i > 0) { // Avoid repeating the moveTo for the first section\n          context.moveTo(newX, newY);\n        }\n        context.lineTo(newX, newY);\n        context.stroke();\n        context.beginPath();\n        context.moveTo(newX, newY);\n      }\n    };\n\n    const stopDrawing = () => {\n      drawing = false;\n      context.beginPath(); // Reset the path so the next start doesn't connect to the previous end\n    };\n\n    canvas.addEventListener('mousedown', startDrawing);\n    canvas.addEventListener('mousemove', draw);\n    canvas.addEventListener('mouseup', stopDrawing);\n    canvas.addEventListener('mouseout', stopDrawing);\n\n    return () => {\n      canvas.removeEventListener('mousedown', startDrawing);\n      canvas.removeEventListener('mousemove', draw);\n      canvas.removeEventListener('mouseup', stopDrawing);\n      canvas.removeEventListener('mouseout', stopDrawing);\n    };\n  }, []);\n\n  return <canvas ref={canvasRef} width={size} height={size} />; // Adjusting for square size\n};\n\nexport default Canvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}