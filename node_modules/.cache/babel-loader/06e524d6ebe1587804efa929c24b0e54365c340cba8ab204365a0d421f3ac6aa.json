{"ast":null,"code":"var _jsxFileName = \"/Users/erinwu/Downloads/project_kaleidoscope/src/Components/Canvas.js\",\n  _s = $RefreshSig$();\n// Canvas.js\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = ({\n  brushSize\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    canvas.style.backgroundColor = 'pink';\n    let drawing = false;\n    const centerX = canvas.width / 2;\n    const centerY = canvas.height / 2;\n\n    // Start drawing\n    const startDrawing = e => {\n      drawing = true;\n      [lastX, lastY] = getXY(canvas, e);\n    };\n\n    // Drawing\n    const draw = e => {\n      if (!drawing) return;\n      const [x, y] = getXY(canvas, e);\n\n      // Dynamic color based on position\n      const hue = x / canvas.width * 360;\n      const strokeColor = `hsl(${hue}, 100%, 50%)`;\n      context.lineWidth = brushSize;\n      context.strokeStyle = strokeColor;\n      context.lineCap = 'round';\n\n      // Calculate and draw symmetrical points\n      let [symPoints, newLastPoints] = calculateSymmetricalPoints(lastX, lastY, x, y, centerX, centerY);\n      symPoints.forEach(([startX, startY, endX, endY]) => {\n        context.beginPath();\n        context.moveTo(startX, startY);\n        context.lineTo(endX, endY);\n        context.stroke();\n      });\n      [lastX, lastY] = newLastPoints;\n    };\n\n    // Stop drawing\n    const stopDrawing = () => {\n      drawing = false;\n    };\n    canvas.addEventListener('mousedown', startDrawing);\n    canvas.addEventListener('mousemove', draw);\n    canvas.addEventListener('mouseup', stopDrawing);\n    canvas.addEventListener('mouseleave', stopDrawing);\n    return () => {\n      canvas.removeEventListener('mousedown', startDrawing);\n      canvas.removeEventListener('mousemove', draw);\n      canvas.removeEventListener('mouseup', stopDrawing);\n      canvas.removeEventListener('mouseleave', stopDrawing);\n    };\n  }, [brushSize]);\n  let lastX = 0;\n  let lastY = 0;\n\n  // Utility function to get mouse position\n  function getXY(canvas, event) {\n    const rect = canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    return [x, y];\n  }\n\n  // Calculate symmetrical points for kaleidoscope effect\n  function calculateSymmetricalPoints(lastX, lastY, x, y, centerX, centerY) {\n    const points = [];\n    const angles = [0, Math.PI / 4, Math.PI / 2, 3 * Math.PI / 4, Math.PI, 5 * Math.PI / 4, 3 * Math.PI / 2, 7 * Math.PI / 4];\n    angles.forEach(angle => {\n      const dx = x - centerX;\n      const dy = y - centerY;\n      const dist = Math.sqrt(dx * dx + dy * dy);\n      const newAngle = Math.atan2(dy, dx) + angle;\n      const newLastAngle = Math.atan2(lastY - centerY, lastX - centerX) + angle;\n      points.push([Math.cos(newLastAngle) * dist + centerX, Math.sin(newLastAngle) * dist + centerY, Math.cos(newAngle) * dist + centerX, Math.sin(newAngle) * dist + centerY]);\n    });\n    return [points, [x, y]];\n  }\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: window.innerWidth,\n    height: window.innerHeight\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 10\n  }, this);\n};\n_s(Canvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","Canvas","brushSize","_s","canvasRef","canvas","current","context","getContext","style","backgroundColor","drawing","centerX","width","centerY","height","startDrawing","e","lastX","lastY","getXY","draw","x","y","hue","strokeColor","lineWidth","strokeStyle","lineCap","symPoints","newLastPoints","calculateSymmetricalPoints","forEach","startX","startY","endX","endY","beginPath","moveTo","lineTo","stroke","stopDrawing","addEventListener","removeEventListener","event","rect","getBoundingClientRect","clientX","left","clientY","top","points","angles","Math","PI","angle","dx","dy","dist","sqrt","newAngle","atan2","newLastAngle","push","cos","sin","ref","window","innerWidth","innerHeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/erinwu/Downloads/project_kaleidoscope/src/Components/Canvas.js"],"sourcesContent":["// Canvas.js\nimport React, { useRef, useEffect } from 'react';\n\nconst Canvas = ({ brushSize }) => {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    canvas.style.backgroundColor = 'pink';\n    let drawing = false;\n    const centerX = canvas.width / 2;\n    const centerY = canvas.height / 2;\n\n    // Start drawing\n    const startDrawing = (e) => {\n      drawing = true;\n      [lastX, lastY] = getXY(canvas, e);\n    };\n\n    // Drawing\n    const draw = (e) => {\n      if (!drawing) return;\n      const [x, y] = getXY(canvas, e);\n      \n      // Dynamic color based on position\n      const hue = (x / canvas.width) * 360;\n      const strokeColor = `hsl(${hue}, 100%, 50%)`;\n\n      context.lineWidth = brushSize;\n      context.strokeStyle = strokeColor;\n      context.lineCap = 'round';\n\n      // Calculate and draw symmetrical points\n      let [symPoints, newLastPoints] = calculateSymmetricalPoints(lastX, lastY, x, y, centerX, centerY);\n      symPoints.forEach(([startX, startY, endX, endY]) => {\n        context.beginPath();\n        context.moveTo(startX, startY);\n        context.lineTo(endX, endY);\n        context.stroke();\n      });\n\n      [lastX, lastY] = newLastPoints;\n    };\n\n    // Stop drawing\n    const stopDrawing = () => {\n      drawing = false;\n    };\n\n    canvas.addEventListener('mousedown', startDrawing);\n    canvas.addEventListener('mousemove', draw);\n    canvas.addEventListener('mouseup', stopDrawing);\n    canvas.addEventListener('mouseleave', stopDrawing);\n\n    return () => {\n      canvas.removeEventListener('mousedown', startDrawing);\n      canvas.removeEventListener('mousemove', draw);\n      canvas.removeEventListener('mouseup', stopDrawing);\n      canvas.removeEventListener('mouseleave', stopDrawing);\n    };\n  }, [brushSize]);\n\n  let lastX = 0;\n  let lastY = 0;\n\n  // Utility function to get mouse position\n  function getXY(canvas, event) {\n    const rect = canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    return [x, y];\n  }\n\n  // Calculate symmetrical points for kaleidoscope effect\n  function calculateSymmetricalPoints(lastX, lastY, x, y, centerX, centerY) {\n    const points = [];\n    const angles = [0, Math.PI / 4, Math.PI / 2, (3 * Math.PI) / 4, Math.PI, (5 * Math.PI) / 4, (3 * Math.PI) / 2, (7 * Math.PI) / 4];\n    angles.forEach((angle) => {\n      const dx = x - centerX;\n      const dy = y - centerY;\n      const dist = Math.sqrt(dx * dx + dy * dy);\n      const newAngle = Math.atan2(dy, dx) + angle;\n      const newLastAngle = Math.atan2(lastY - centerY, lastX - centerX) + angle;\n      points.push([\n        Math.cos(newLastAngle) * dist + centerX, \n        Math.sin(newLastAngle) * dist + centerY,\n        Math.cos(newAngle) * dist + centerX, \n        Math.sin(newAngle) * dist + centerY\n      ]);\n    });\n    return [points, [x, y]];\n  }\n\n  return <canvas ref={canvasRef} width={window.innerWidth} height={window.innerHeight} />;\n};\n\nexport default Canvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}