{"ast":null,"code":"var _jsxFileName = \"/Users/erinwu/Downloads/project_kaleidoscope/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Canvas from './Components/Canvas';\nimport BrushControls from './Components/BrushControls';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State for brush size and color\n  const [brushSize, setBrushSize] = useState(5); // Default brush size\n  const [brushColor, setBrushColor] = useState('#000000'); // Default brush color\n  const canvasRef = useRef(); // Ref to the Canvas component\n\n  // Handlers to update state\n  const handleBrushSizeChange = newSize => {\n    setBrushSize(newSize);\n  };\n  const resetCanvas = () => {\n    canvasRef.current.clearCanvas(); // Call the clearCanvas method in the Canvas component\n  };\n  const handleBrushColorChange = newColor => {\n    setBrushColor(newColor);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Kaleidoscope Painter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BrushControls, {\n      onColorChange: handleBrushColorChange,\n      onSizeChange: handleBrushSizeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetCanvas,\n      style: {\n        margin: '10px'\n      },\n      children: \"Restart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Canvas, {\n      width: window.innerWidth,\n      height: window.innerHeight,\n      brushSize: brushSize,\n      brushColor: brushColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CfR2aTyBH6j4Ugr1HJOE44ax2Ug=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Canvas","BrushControls","jsxDEV","_jsxDEV","App","_s","brushSize","setBrushSize","brushColor","setBrushColor","canvasRef","useRef","handleBrushSizeChange","newSize","resetCanvas","current","clearCanvas","handleBrushColorChange","newColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onColorChange","onSizeChange","onClick","style","margin","width","window","innerWidth","height","innerHeight","_c","$RefreshReg$"],"sources":["/Users/erinwu/Downloads/project_kaleidoscope/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Canvas from './Components/Canvas';\nimport BrushControls from './Components/BrushControls';\nimport './App.css';\n\nfunction App() {\n  // State for brush size and color\n  const [brushSize, setBrushSize] = useState(5); // Default brush size\n  const [brushColor, setBrushColor] = useState('#000000'); // Default brush color\n  const canvasRef = useRef(); // Ref to the Canvas component\n\n\n  // Handlers to update state\n  const handleBrushSizeChange = (newSize) => {\n    setBrushSize(newSize);\n  };\n  \n  const resetCanvas = () => {\n    canvasRef.current.clearCanvas(); // Call the clearCanvas method in the Canvas component\n  };\n\n  const handleBrushColorChange = (newColor) => {\n    setBrushColor(newColor);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Kaleidoscope Painter</h1>\n      <BrushControls\n        onColorChange={handleBrushColorChange}\n        onSizeChange={handleBrushSizeChange}\n      />\n      <button onClick={resetCanvas} style={{ margin: '10px' }}>Restart</button>\n      <Canvas\n        width={window.innerWidth}\n        height={window.innerHeight}\n        brushSize={brushSize}\n        brushColor={brushColor}\n      />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;EACzD,MAAMW,SAAS,GAAGC,MAAM,CAAC,CAAC,CAAC,CAAC;;EAG5B;EACA,MAAMC,qBAAqB,GAAIC,OAAO,IAAK;IACzCN,YAAY,CAACM,OAAO,CAAC;EACvB,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBJ,SAAS,CAACK,OAAO,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC;EACnC,CAAC;EAED,MAAMC,sBAAsB,GAAIC,QAAQ,IAAK;IAC3CT,aAAa,CAACS,QAAQ,CAAC;EACzB,CAAC;EAED,oBACEf,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBjB,OAAA;MAAAiB,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BrB,OAAA,CAACF,aAAa;MACZwB,aAAa,EAAER,sBAAuB;MACtCS,YAAY,EAAEd;IAAsB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eACFrB,OAAA;MAAQwB,OAAO,EAAEb,WAAY;MAACc,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAO,CAAE;MAAAT,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzErB,OAAA,CAACH,MAAM;MACL8B,KAAK,EAAEC,MAAM,CAACC,UAAW;MACzBC,MAAM,EAAEF,MAAM,CAACG,WAAY;MAC3B5B,SAAS,EAAEA,SAAU;MACrBE,UAAU,EAAEA;IAAW;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACnB,EAAA,CApCQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}