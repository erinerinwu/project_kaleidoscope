{"ast":null,"code":"var _jsxFileName = \"/Users/erinwu/kaleidoscope/src/Components/Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = ({\n  size = 500,\n  brushColor = '#000000',\n  brushSize = 5\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.style.backgroundColor = 'pink'; // Set the canvas background to pink\n    const context = canvas.getContext('2d');\n    const centerX = canvas.width / 2;\n    const centerY = canvas.height / 2;\n    let drawing = false;\n    let lastX = 0;\n    let lastY = 0;\n    const startDrawing = e => {\n      const rect = canvas.getBoundingClientRect();\n      lastX = e.clientX - rect.left;\n      lastY = e.clientY - rect.top;\n      drawing = true;\n    };\n    const draw = e => {\n      if (!drawing) return;\n      const rect = canvas.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const y = e.clientY - rect.top;\n\n      // Update the brush color dynamically as the mouse moves\n      const dynamicBrushColor = typeof brushColor === 'function' ? brushColor(x, y) : brushColor;\n      context.lineWidth = brushSize;\n      context.strokeStyle = dynamicBrushColor; // Use the dynamically updated brush color\n      context.lineCap = 'round';\n\n      // Now we draw a line from the last position to the current one\n      context.beginPath();\n      context.moveTo(lastX, lastY);\n      context.lineTo(x, y);\n      context.stroke();\n      lastX = x;\n      lastY = y;\n    };\n    const stopDrawing = () => {\n      drawing = false;\n    };\n    canvas.addEventListener('mousedown', startDrawing);\n    canvas.addEventListener('mousemove', draw);\n    canvas.addEventListener('mouseup', stopDrawing);\n    canvas.addEventListener('mouseout', stopDrawing);\n    return () => {\n      canvas.removeEventListener('mousedown', startDrawing);\n      canvas.removeEventListener('mousemove', draw);\n      canvas.removeEventListener('mouseup', stopDrawing);\n      canvas.removeEventListener('mouseout', stopDrawing);\n    };\n  }, [brushSize]); // Removed brushColor from dependencies to not recreate the effect when color changes\n\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: size,\n    height: size\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 10\n  }, this);\n};\n_s(Canvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","Canvas","size","brushColor","brushSize","_s","canvasRef","canvas","current","style","backgroundColor","context","getContext","centerX","width","centerY","height","drawing","lastX","lastY","startDrawing","e","rect","getBoundingClientRect","clientX","left","clientY","top","draw","x","y","dynamicBrushColor","lineWidth","strokeStyle","lineCap","beginPath","moveTo","lineTo","stroke","stopDrawing","addEventListener","removeEventListener","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/erinwu/kaleidoscope/src/Components/Canvas.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nconst Canvas = ({ size = 500, brushColor = '#000000', brushSize = 5 }) => {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.style.backgroundColor = 'pink'; // Set the canvas background to pink\n    const context = canvas.getContext('2d');\n    const centerX = canvas.width / 2;\n    const centerY = canvas.height / 2;\n    let drawing = false;\n    let lastX = 0;\n    let lastY = 0;\n\n    const startDrawing = (e) => {\n      const rect = canvas.getBoundingClientRect();\n      lastX = e.clientX - rect.left;\n      lastY = e.clientY - rect.top;\n      drawing = true;\n    };\n\n    const draw = (e) => {\n      if (!drawing) return;\n      const rect = canvas.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const y = e.clientY - rect.top;\n\n      // Update the brush color dynamically as the mouse moves\n      const dynamicBrushColor = typeof brushColor === 'function' ? brushColor(x, y) : brushColor;\n\n      context.lineWidth = brushSize;\n      context.strokeStyle = dynamicBrushColor; // Use the dynamically updated brush color\n      context.lineCap = 'round';\n\n      // Now we draw a line from the last position to the current one\n      context.beginPath();\n      context.moveTo(lastX, lastY);\n      context.lineTo(x, y);\n      context.stroke();\n\n      lastX = x;\n      lastY = y;\n    };\n\n    const stopDrawing = () => {\n      drawing = false;\n    };\n\n    canvas.addEventListener('mousedown', startDrawing);\n    canvas.addEventListener('mousemove', draw);\n    canvas.addEventListener('mouseup', stopDrawing);\n    canvas.addEventListener('mouseout', stopDrawing);\n\n    return () => {\n      canvas.removeEventListener('mousedown', startDrawing);\n      canvas.removeEventListener('mousemove', draw);\n      canvas.removeEventListener('mouseup', stopDrawing);\n      canvas.removeEventListener('mouseout', stopDrawing);\n    };\n  }, [brushSize]); // Removed brushColor from dependencies to not recreate the effect when color changes\n\n  return <canvas ref={canvasRef} width={size} height={size} />;\n};\n\nexport default Canvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}