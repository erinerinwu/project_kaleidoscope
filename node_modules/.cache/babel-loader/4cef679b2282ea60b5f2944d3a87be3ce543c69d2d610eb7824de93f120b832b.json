{"ast":null,"code":"import React,{useRef,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const Canvas=_ref=>{let{size=500,brushColor='#000000',brushSize=5}=_ref;const canvasRef=useRef(null);useEffect(()=>{const canvas=canvasRef.current;canvas.style.backgroundColor='pink';// Set the canvas background to pink\nconst context=canvas.getContext('2d');const centerX=canvas.width/2;const centerY=canvas.height/2;let drawing=false;let lastX=0;let lastY=0;const startDrawing=e=>{const rect=canvas.getBoundingClientRect();lastX=e.clientX-rect.left;lastY=e.clientY-rect.top;drawing=true;};const draw=e=>{if(!drawing)return;const rect=canvas.getBoundingClientRect();const x=e.clientX-rect.left;const y=e.clientY-rect.top;context.lineWidth=brushSize;// Use the brushSize prop\ncontext.strokeStyle=brushColor;// Use the brushColor prop\ncontext.lineCap='round';// Calculate initial and final points for the drawing\nconst initialPoints=calculateSymmetricalPoints(lastX,lastY,centerX,centerY,brushSize,brushColor,context);const finalPoints=calculateSymmetricalPoints(x,y,centerX,centerY,brushSize,brushColor,context);initialPoints.forEach((start,index)=>{const end=finalPoints[index];context.beginPath();context.moveTo(start.x,start.y);context.lineTo(end.x,end.y);context.stroke();});lastX=x;lastY=y;};const stopDrawing=()=>{drawing=false;};canvas.addEventListener('mousedown',startDrawing);canvas.addEventListener('mousemove',draw);canvas.addEventListener('mouseup',stopDrawing);canvas.addEventListener('mouseout',stopDrawing);return()=>{canvas.removeEventListener('mousedown',startDrawing);canvas.removeEventListener('mousemove',draw);canvas.removeEventListener('mouseup',stopDrawing);canvas.removeEventListener('mouseout',stopDrawing);};},[brushColor,brushSize]);// Add brushColor and brushSize as dependencies\nreturn/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,width:size,height:size});};export default Canvas;// Adjusted calculateSymmetricalPoints to take additional arguments\nfunction calculateSymmetricalPoints(x,y,centerX,centerY,brushSize,brushColor,context){const points=[];const angle=Math.atan2(y-centerY,x-centerX);const dist=Math.sqrt((x-centerX)**2+(y-centerY)**2);for(let i=0;i<8;i++){const sectionAngle=Math.PI/4*i;const reflectedAngle=2*sectionAngle-angle;points.push({x:centerX+dist*Math.cos(angle+sectionAngle),y:centerY+dist*Math.sin(angle+sectionAngle)});points.push({x:centerX+dist*Math.cos(reflectedAngle+sectionAngle),y:centerY+dist*Math.sin(reflectedAngle+sectionAngle)});}return points;}","map":{"version":3,"names":["React","useRef","useEffect","jsx","_jsx","Canvas","_ref","size","brushColor","brushSize","canvasRef","canvas","current","style","backgroundColor","context","getContext","centerX","width","centerY","height","drawing","lastX","lastY","startDrawing","e","rect","getBoundingClientRect","clientX","left","clientY","top","draw","x","y","lineWidth","strokeStyle","lineCap","initialPoints","calculateSymmetricalPoints","finalPoints","forEach","start","index","end","beginPath","moveTo","lineTo","stroke","stopDrawing","addEventListener","removeEventListener","ref","points","angle","Math","atan2","dist","sqrt","i","sectionAngle","PI","reflectedAngle","push","cos","sin"],"sources":["/Users/erinwu/Downloads/project_kaleidoscope/src/Components/Canvas.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nconst Canvas = ({ size = 500, brushColor = '#000000', brushSize = 5 }) => {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.style.backgroundColor = 'pink'; // Set the canvas background to pink\n    const context = canvas.getContext('2d');\n    const centerX = canvas.width / 2;\n    const centerY = canvas.height / 2;\n    let drawing = false;\n    let lastX = 0;\n    let lastY = 0;\n\n    const startDrawing = (e) => {\n      const rect = canvas.getBoundingClientRect();\n      lastX = e.clientX - rect.left;\n      lastY = e.clientY - rect.top;\n      drawing = true;\n    };\n\n    const draw = (e) => {\n      if (!drawing) return;\n      const rect = canvas.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const y = e.clientY - rect.top;\n\n      context.lineWidth = brushSize; // Use the brushSize prop\n      context.strokeStyle = brushColor; // Use the brushColor prop\n      context.lineCap = 'round';\n\n      // Calculate initial and final points for the drawing\n      const initialPoints = calculateSymmetricalPoints(lastX, lastY, centerX, centerY, brushSize, brushColor, context);\n      const finalPoints = calculateSymmetricalPoints(x, y, centerX, centerY, brushSize, brushColor, context);\n\n      initialPoints.forEach((start, index) => {\n        const end = finalPoints[index];\n        context.beginPath();\n        context.moveTo(start.x, start.y);\n        context.lineTo(end.x, end.y);\n        context.stroke();\n      });\n\n      lastX = x;\n      lastY = y;\n    };\n\n    const stopDrawing = () => {\n      drawing = false;\n    };\n\n    canvas.addEventListener('mousedown', startDrawing);\n    canvas.addEventListener('mousemove', draw);\n    canvas.addEventListener('mouseup', stopDrawing);\n    canvas.addEventListener('mouseout', stopDrawing);\n\n    return () => {\n      canvas.removeEventListener('mousedown', startDrawing);\n      canvas.removeEventListener('mousemove', draw);\n      canvas.removeEventListener('mouseup', stopDrawing);\n      canvas.removeEventListener('mouseout', stopDrawing);\n    };\n  }, [brushColor, brushSize]); // Add brushColor and brushSize as dependencies\n\n  return <canvas ref={canvasRef} width={size} height={size} />;\n};\n\nexport default Canvas;\n\n// Adjusted calculateSymmetricalPoints to take additional arguments\nfunction calculateSymmetricalPoints(x, y, centerX, centerY, brushSize, brushColor, context) {\n  const points = [];\n  const angle = Math.atan2(y - centerY, x - centerX);\n  const dist = Math.sqrt((x - centerX) ** 2 + (y - centerY) ** 2);\n\n  for (let i = 0; i < 8; i++) {\n    const sectionAngle = (Math.PI / 4) * i;\n    const reflectedAngle = 2 * sectionAngle - angle;\n    points.push({\n      x: centerX + dist * Math.cos(angle + sectionAngle),\n      y: centerY + dist * Math.sin(angle + sectionAngle)\n    });\n    points.push({\n      x: centerX + dist * Math.cos(reflectedAngle + sectionAngle),\n      y: centerY + dist * Math.sin(reflectedAngle + sectionAngle)\n    });\n  }\n\n  return points;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}