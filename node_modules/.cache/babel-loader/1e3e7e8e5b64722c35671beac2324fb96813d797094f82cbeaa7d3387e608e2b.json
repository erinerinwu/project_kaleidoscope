{"ast":null,"code":"var _jsxFileName = \"/Users/erinwu/kaleidoscope/src/Components/Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = ({\n  size = 500\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.style.backgroundColor = 'pink'; // Set the canvas background to pink\n    const context = canvas.getContext('2d');\n    const centerX = canvas.width / 2;\n    const centerY = canvas.height / 2;\n    let drawing = false;\n    let lastX = 0;\n    let lastY = 0;\n    const startDrawing = e => {\n      const rect = canvas.getBoundingClientRect();\n      lastX = e.clientX - rect.left;\n      lastY = e.clientY - rect.top;\n      drawing = true;\n    };\n    const draw = e => {\n      if (!drawing) return;\n      const rect = canvas.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const y = e.clientY - rect.top;\n      context.lineWidth = 5;\n      context.lineCap = 'round';\n      context.beginPath();\n      context.moveTo(lastX, lastY); // Move to the last position\n\n      // Reflect the line across all 8 sections\n      for (let i = 0; i < 8; i++) {\n        const angleDiff = Math.atan2(y - centerY, x - centerX) - Math.atan2(lastY - centerY, lastX - centerX);\n        const dist = Math.sqrt((x - centerX) ** 2 + (y - centerY) ** 2);\n        const lastDist = Math.sqrt((lastX - centerX) ** 2 + (lastY - centerY) ** 2);\n        for (let j = 0; j < 2; j++) {\n          // Draw for current and opposite section\n          const angle = Math.atan2(lastY - centerY, lastX - centerX) + Math.PI / 4 * i + Math.PI * j;\n          const reflectedAngle = angle + angleDiff;\n          const newX = centerX + dist * Math.cos(reflectedAngle);\n          const newY = centerY + dist * Math.sin(reflectedAngle);\n          const startX = centerX + lastDist * Math.cos(angle);\n          const startY = centerY + lastDist * Math.sin(angle);\n          if (i > 0 || j > 0) {\n            // Avoid repeating the moveTo for the first point\n            context.moveTo(startX, startY);\n          }\n          context.lineTo(newX, newY);\n        }\n      }\n      context.stroke(); // Apply the stroke only once after drawing all sections\n      lastX = x;\n      lastY = y;\n    };\n    const stopDrawing = () => {\n      drawing = false;\n    };\n    canvas.addEventListener('mousedown', startDrawing);\n    canvas.addEventListener('mousemove', draw);\n    canvas.addEventListener('mouseup', stopDrawing);\n    canvas.addEventListener('mouseout', stopDrawing);\n    return () => {\n      canvas.removeEventListener('mousedown', startDrawing);\n      canvas.removeEventListener('mousemove', draw);\n      canvas.removeEventListener('mouseup', stopDrawing);\n      canvas.removeEventListener('mouseout', stopDrawing);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: size,\n    height: size\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 10\n  }, this);\n};\n_s(Canvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","Canvas","size","_s","canvasRef","canvas","current","style","backgroundColor","context","getContext","centerX","width","centerY","height","drawing","lastX","lastY","startDrawing","e","rect","getBoundingClientRect","clientX","left","clientY","top","draw","x","y","lineWidth","lineCap","beginPath","moveTo","i","angleDiff","Math","atan2","dist","sqrt","lastDist","j","angle","PI","reflectedAngle","newX","cos","newY","sin","startX","startY","lineTo","stroke","stopDrawing","addEventListener","removeEventListener","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/erinwu/kaleidoscope/src/Components/Canvas.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nconst Canvas = ({ size = 500 }) => {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.style.backgroundColor = 'pink'; // Set the canvas background to pink\n    const context = canvas.getContext('2d');\n    const centerX = canvas.width / 2;\n    const centerY = canvas.height / 2;\n    let drawing = false;\n    let lastX = 0;\n    let lastY = 0;\n\n    const startDrawing = (e) => {\n      const rect = canvas.getBoundingClientRect();\n      lastX = e.clientX - rect.left;\n      lastY = e.clientY - rect.top;\n      drawing = true;\n    };\n\n    const draw = (e) => {\n      if (!drawing) return;\n      const rect = canvas.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const y = e.clientY - rect.top;\n\n      context.lineWidth = 5;\n      context.lineCap = 'round';\n      context.beginPath();\n      context.moveTo(lastX, lastY); // Move to the last position\n\n      // Reflect the line across all 8 sections\n      for (let i = 0; i < 8; i++) {\n        const angleDiff = Math.atan2(y - centerY, x - centerX) - Math.atan2(lastY - centerY, lastX - centerX);\n        const dist = Math.sqrt((x - centerX) ** 2 + (y - centerY) ** 2);\n        const lastDist = Math.sqrt((lastX - centerX) ** 2 + (lastY - centerY) ** 2);\n\n        for (let j = 0; j < 2; j++) { // Draw for current and opposite section\n          const angle = Math.atan2(lastY - centerY, lastX - centerX) + (Math.PI / 4) * i + (Math.PI * j);\n          const reflectedAngle = angle + angleDiff;\n          const newX = centerX + dist * Math.cos(reflectedAngle);\n          const newY = centerY + dist * Math.sin(reflectedAngle);\n          const startX = centerX + lastDist * Math.cos(angle);\n          const startY = centerY + lastDist * Math.sin(angle);\n\n          if (i > 0 || j > 0) { // Avoid repeating the moveTo for the first point\n            context.moveTo(startX, startY);\n          }\n          context.lineTo(newX, newY);\n        }\n      }\n\n      context.stroke(); // Apply the stroke only once after drawing all sections\n      lastX = x;\n      lastY = y;\n    };\n\n    const stopDrawing = () => {\n      drawing = false;\n    };\n\n    canvas.addEventListener('mousedown', startDrawing);\n    canvas.addEventListener('mousemove', draw);\n    canvas.addEventListener('mouseup', stopDrawing);\n    canvas.addEventListener('mouseout', stopDrawing);\n\n    return () => {\n      canvas.removeEventListener('mousedown', startDrawing);\n      canvas.removeEventListener('mousemove', draw);\n      canvas.removeEventListener('mouseup', stopDrawing);\n      canvas.removeEventListener('mouseout', stopDrawing);\n    };\n  }, []);\n\n  return <canvas ref={canvasRef} width={size} height={size} />;\n};\n\nexport default Canvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}